<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Anthony Ison</title>
    <link>https://anthonyison.com/</link>
    <atom:link href="/rss.xml" rel="self" type="application/rss+xml"/>
    
    <description>Software development and DevOps. Bringing solutions to life.</description>
    <pubDate>Tue, 27 Aug 2019 23:33:12 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>Azure DevOps, unit testing and code coverage with .Net Core</title>
      <link>https://anthonyison.com/azure-devops-unit-testing-and-code-coverage-with-dotnet-core/</link>
      <guid>https://anthonyison.com/azure-devops-unit-testing-and-code-coverage-with-dotnet-core/</guid>
      <pubDate>Tue, 27 Aug 2019 13:30:58 GMT</pubDate>
      <description>
      
        Unit testing can be very handy when it’s set up correctly. The gold standard is to have regular CI builds, usually run after each commit, that executes all impacted unit tests to confirm that the application still does what it’s been designed to do. It can be tricky to get it all set up so that all 
      
      </description>
      
      <comments>https://anthonyison.com/azure-devops-unit-testing-and-code-coverage-with-dotnet-core/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Refactoring code - restructure, not rewrite</title>
      <link>https://anthonyison.com/refactoring-code-restructure-not-rewrite/</link>
      <guid>https://anthonyison.com/refactoring-code-restructure-not-rewrite/</guid>
      <pubDate>Tue, 30 Jul 2019 05:35:28 GMT</pubDate>
      <description>
      
        I see a lot of similarities between software and business processes. If I’m talking about a queuing mechanism, it often helps to describe it as a call centre managing their tickets, or a lock as being like a key for the toilets. Refactoring then, would simply be a restructuring of a business or to g
      
      </description>
      
      <comments>https://anthonyison.com/refactoring-code-restructure-not-rewrite/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Static Site Generation with Vuepress</title>
      <link>https://anthonyison.com/static-site-generation-with-vuepress/</link>
      <guid>https://anthonyison.com/static-site-generation-with-vuepress/</guid>
      <pubDate>Wed, 10 Jul 2019 12:20:34 GMT</pubDate>
      <description>
      
        When I was reviewing static site generators, Vuepress caught my eye but I passed over it quickly because their web site admitted that they lacked blogging support. I really liked the approach though. It uses the Vue.js server-side processing to generate static sites. It’s time to have a closer look.
      
      </description>
      
      <comments>https://anthonyison.com/static-site-generation-with-vuepress/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Blogging for consistency</title>
      <link>https://anthonyison.com/blogging-for-consistency/</link>
      <guid>https://anthonyison.com/blogging-for-consistency/</guid>
      <pubDate>Mon, 17 Jun 2019 01:25:27 GMT</pubDate>
      <description>
      
        I’ve written a few blog posts now and I try to get feedback each time. The feedback has been great and helps me to improve. I’m building up a list of things to think about as I’m writing. In this blog, I want to focus on the feedback and highlight some of the small things that are really the big thi
      
      </description>
      
      <comments>https://anthonyison.com/blogging-for-consistency/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Kubernetes: AKS and Windows Containers</title>
      <link>https://anthonyison.com/kubernetes-aks-and-windows-containers/</link>
      <guid>https://anthonyison.com/kubernetes-aks-and-windows-containers/</guid>
      <pubDate>Mon, 10 Jun 2019 04:52:07 GMT</pubDate>
      <description>
      
        When I first heard about Windows containers, I got really excited by the idea of packaging ASP.Net legacy apps and ASP.Net Core apps consistently, without the need to remote into a VM and apply extra libraries. I soon found that Windows containers were quickly followed by a “yeah, but”. Windows node
      
      </description>
      
      <comments>https://anthonyison.com/kubernetes-aks-and-windows-containers/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Kubernetes: A Beginner&#39;s Guide</title>
      <link>https://anthonyison.com/kubernetes-a-beginners-guide/</link>
      <guid>https://anthonyison.com/kubernetes-a-beginners-guide/</guid>
      <pubDate>Tue, 04 Jun 2019 12:45:13 GMT</pubDate>
      <description>
      
        Kubernetes is a container orchestration platform and has been described as “the OS of the cloud”. It builds on container-based services by providing many features such as volumes for stateful services, resilience and scaling, monitoring, automated zero-downtime upgrades. It runs on a cluster of node
      
      </description>
      
      <comments>https://anthonyison.com/kubernetes-a-beginners-guide/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Kubernetes: Setting up a cluster on AKS</title>
      <link>https://anthonyison.com/kubernetes-setting-up-a-cluster-on-aks/</link>
      <guid>https://anthonyison.com/kubernetes-setting-up-a-cluster-on-aks/</guid>
      <pubDate>Tue, 04 Jun 2019 12:45:12 GMT</pubDate>
      <description>
      
        Most cloud providers provide a managed Kubernetes cluster at this point. Each time I come back to look at Kubernetes, I feel like I’ve forgotten something (or everything). This post is a cheat sheet for getting a cluster up and running on Azure (using AKS) with recommended extras. 

Creating a Clust
      
      </description>
      
      <comments>https://anthonyison.com/kubernetes-setting-up-a-cluster-on-aks/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Serverless what? Why do we need it?</title>
      <link>https://anthonyison.com/serverless-what-why-do-we-need-it/</link>
      <guid>https://anthonyison.com/serverless-what-why-do-we-need-it/</guid>
      <pubDate>Sun, 19 May 2019 22:58:24 GMT</pubDate>
      <description>
      
        “Serverless” was one of those terms that left me scratching my head when I first heard it. How on earth do you run a server… without a server??? That’s some crazy marketing spin! What I quickly learned is that serverless is referring to how much infrastructure you need to manage. That is, none. Nada
      
      </description>
      
      <comments>https://anthonyison.com/serverless-what-why-do-we-need-it/#disqus_thread</comments>
    </item>
    
    <item>
      <title>So... Cloudflare...</title>
      <link>https://anthonyison.com/so-cloudflare/</link>
      <guid>https://anthonyison.com/so-cloudflare/</guid>
      <pubDate>Sun, 05 May 2019 10:40:42 GMT</pubDate>
      <description>
      
        I went to a great talk by Troy Hunt in Brisbane a while ago. Well, it was great at the time. It didn’t take long before I started to realise that most of the struggles I’ve had with HTTPS on my blog could have actually been side stepped quite nicely by using Cloudflare.

Let me be clear. This wasn’t
      
      </description>
      
      <comments>https://anthonyison.com/so-cloudflare/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Migrating from Ghost to Hexo</title>
      <link>https://anthonyison.com/migrating-from-ghost-to-hexo/</link>
      <guid>https://anthonyison.com/migrating-from-ghost-to-hexo/</guid>
      <pubDate>Sat, 04 May 2019 13:12:56 GMT</pubDate>
      <description>
      
        It was surprisingly easy to migrate my blog out of ghost, but there were a few missed steps along the way. Often, I would find a better way after I had done the heavy lifting.

1. Install Hexo and create the blog
$ npm install hexo-cli -g
$ hexo init myblog
$ cd myblog


2. Install the hexo-casper t
      
      </description>
      
      <comments>https://anthonyison.com/migrating-from-ghost-to-hexo/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Serverless markdown blogs with Hexo</title>
      <link>https://anthonyison.com/serverless-markdown-blogs-with-hexo/</link>
      <guid>https://anthonyison.com/serverless-markdown-blogs-with-hexo/</guid>
      <pubDate>Fri, 03 May 2019 11:27:32 GMT</pubDate>
      <description>
      
        Let me start this by saying I’m loving my ghost blog, and I get a kick out of running it on AKS. The thing is, the content only changes when I post and so I’m thinking about caching and I realise the whole blog can be cached. It’s not an API. I don’t have changing data. (Ok, TECHNICALLY I have a db,
      
      </description>
      
      <comments>https://anthonyison.com/serverless-markdown-blogs-with-hexo/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Dynamic environment in your static Angular application</title>
      <link>https://anthonyison.com/dynamic-environment-in-your-static-angular-application/</link>
      <guid>https://anthonyison.com/dynamic-environment-in-your-static-angular-application/</guid>
      <pubDate>Wed, 24 Apr 2019 14:00:00 GMT</pubDate>
      <description>
      
        I keep hitting the same problem when building Angular applications. Environment settings! They are easy to set up in development, but as you target different environments, the old “one file per environment” really doesn’t cut it. I don’t want to rebuild my application just to deploy to production an
      
      </description>
      
      <comments>https://anthonyison.com/dynamic-environment-in-your-static-angular-application/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Automatic HTTPS on Kubernetes</title>
      <link>https://anthonyison.com/automatic-https-on-kubernetes/</link>
      <guid>https://anthonyison.com/automatic-https-on-kubernetes/</guid>
      <pubDate>Sat, 16 Feb 2019 14:00:00 GMT</pubDate>
      <description>
      
        This post starts with a slight regret that I didn’t get Ghost running on a Web App. One of the brilliant parts of a Web App is that you can force all requests over HTTPS with the click of a button. Of course, I’d still need to organise a certificate for my domain. Hold on, let me stop and back up a 
      
      </description>
      
      <comments>https://anthonyison.com/automatic-https-on-kubernetes/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Running Ghost on Kubernetes on Azure</title>
      <link>https://anthonyison.com/running-ghost-on-kubernetes-on-azure/</link>
      <guid>https://anthonyison.com/running-ghost-on-kubernetes-on-azure/</guid>
      <pubDate>Tue, 15 Jan 2019 14:00:00 GMT</pubDate>
      <description>
      
        In my previous post, I was looking into a few options for running my blog. I think at this time, I’m going to keep it on Azure because I can run it for free. I suspect I would make a different choice if not for my bonus credits. I will need some benchmark figures to choose a provider, however kubern
      
      </description>
      
      <comments>https://anthonyison.com/running-ghost-on-kubernetes-on-azure/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Creating a blog with Ghost</title>
      <link>https://anthonyison.com/creating-a-blog-with-ghost/</link>
      <guid>https://anthonyison.com/creating-a-blog-with-ghost/</guid>
      <pubDate>Mon, 07 Jan 2019 14:00:00 GMT</pubDate>
      <description>
      
        There seems to come a time in a software developer’s life where you look at creating a blog. It’s that time for me. I want a place where I can write up some of my experiments for later reference, and if that can help others along the way, all the better!

Considerations
 1. I don’t want to pay anyth
      
      </description>
      
      <comments>https://anthonyison.com/creating-a-blog-with-ghost/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
